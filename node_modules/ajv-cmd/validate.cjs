var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var validate_exports = {};
__export(validate_exports, {
  default: () => validate_default,
  validate: () => validate
});
module.exports = __toCommonJS(validate_exports);
var import_compile = require("./compile.js");
const defaultOptions = {
  allErrors: true
  // required for `errorMessage`
};
const validate = async (schema, options = {}) => {
  options = { ...defaultOptions, ...options };
  let validate2, valid;
  try {
    validate2 = (0, import_compile.compile)(schema, options);
  } catch (e) {
    console.error(e.message);
    return valid;
  }
  let testSuccess = true;
  for (const data of (options == null ? void 0 : options.testData) ?? []) {
    valid = validate2(data);
    if (!valid) {
      console.error(validate2.errors);
      testSuccess = false;
    }
  }
  return testSuccess;
};
var validate_default = validate;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  validate
});
